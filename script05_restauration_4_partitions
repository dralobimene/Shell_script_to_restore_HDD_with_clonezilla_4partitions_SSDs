#!/bin/bash

## script a executer en root depuis le shell de clonezilla
## ce script part du principe que vs avez restauré votre DDE sur votre DDI (operation de restauration)

## version bash: GNU bash, version 5.1.4(1)-release (x86_64-pc-linux-gnu)
## version debian: Debian GNU/Linux 11 (bullseye)
## version noyau: 5.10.0-9-amd64

## AVERTISSEMENT: desactiver le secure boot ds le bios (vs avez du le faire pr l'operation de clonage)

## se logguer en root depuis le shell clonezilla: sudo -i, pas de mot de passe demandé
## monter votre cle USB contenant les scripts ds /media/nomutilisateur/sauv_donnees
## ou nomutilisateur est le nom de votre compte utilisateur lorsque vs etes sous Debian

## AVERTISSEMENT: vs devez etre sur de savoir quel disque dur est monte sur /dev/sda et quel disque dur est monte sur /dev/sdb
## pr cela on affichera le resultat de la commande fdisk -l
## en fait, tapez la commande fdisk -l maintenant car il se pourrait que la sortie soit + importante que l'ecran.
## Si tel etait le cas, vs pvez tjs envoyer la sortie ds un fichier avec la commande fdisk -l > /media/nomutilisateur/sauv_donnees/nomfichier
## reperez le modele de vos disques durs et differenciez les (ds votre tete ou sur papier)
## IL FAUT QD MEME QUE VOTRE DDI SOIT RECONNU EN TANT QUE /DEV/SDA

## AVERTISSEMENT: savoir utiliser un minimum la ligne de commande
## commande mount
## commande umount
## commande cd
## commande chmod (seulement si vs n'avez pas deja rendu vos scripts executables)
## savoir executer un script (en etant ds son repertoire: commande: ./monscript)
## creer et effacer un repertoire (pr le point de montage de votre clé USB)
## passer d'une console a une autre
## autres ???

## variables que vs allez definir
## variable de votre compte utilisateur (chez moi: herve) (cela vs sera demande + tard)
## variables (au nbre de 2) qui definissent les lettres de vos disques durs (cela vs sera demande + tard)

## variables definies en dur (a modifier si necessaire)
## variable qui porte le nom de votre cle USB ou est stocké ce script (definie en dur, dc a editer si nessaire)
	## exemple: nom_cle_USB= 'sauv_donnees'
	## NB: si vs ne le connaissez pas, en root ds le terminal, commande fdisk -l, reperez le modele de votre cle
		## et ensuite blkid. si votre cle a un label (nom), il sera affiche.
		## sinon vs devez trouver un moyen pr...
## variable qui definit le nom du (ou des) repertoire(s) de votre cle USB et qui contient ce script (definie en dur, a editer si vs choisissez
	## un autre nom de repertoire)
	## exemple: nom_rep_cle_USB='scripts_bash_clonage_restauration'

## script bash pr root pr automatiser les manips apres 1 restauration reussie avec clonezilla
## A l'installation de Debian, le disque dur interne a été composé avec 3 partitions
## ds cet ordre
## - 1 partition EFI (amorcable), de type vfat
## - 1 partition swap, de type swap
## - 1 partition racine (qui contient la racine + le home), de type ext4
## PS: j'avais une 4° partition cree de 700ko. Elle n'apparait pas sur le disque, c'est dc
## specifique à l'installation, ne vs en preoccupez pas
## si vs en avez +, modifiez ce script en consequence

## code couleur, colorise la sortie echo
RED='\033[0;31m'
NC='\033[0m' # No Color
GREEN='\033[0;32m'
ORANGE='\033[0;33m'
PURPLE='\033[0;35m'
BLUE='\033[0;34m'

## souligne la sortie echo
bold=$(tput bold)
normal=$(tput sgr0)

## [7;XXm : fond
## [9;XXm : barré

## valeurs possibles a la place du 5
## 0 (normal), 1 (gras), 2 (Dim?), 3 (italique), 4 (ssligné), 5 (clignote), 7 (reverse), 8 (invisible)
## echo -e '\033[5mYOUR_STRING\033[0m' 


echo
echo "=========== script interactif (avec confirmation) ==========="
echo "=========== dans le but de pouvoir demarrer sur   ==========="
echo "=========== le systeme restauré (le DDI)          ==========="
echo "=========== A executer ds le terminal             ==========="
echo "=========== (ou peut-etre en console)             ==========="
echo "=========== sous le compte root                   ==========="
echo

######################################################################################################
## fonctions
######################################################################################################

confirm() {
	read -r -p "{$1} [y/n]" response
	case "$response" in [yY][eE][sS]|[yY])
		true;;
	*)
		false;;
esac
}

function pause(){
	echo "pr vs permettre de lire les retours console, pause de 3600 secs que vs pvez desactiver"
	echo "Appuyez sur une touche ou attendez 1 petite heure, le script reprendra son execution"
	read -n1 -t3600 any_key
}

#####################################################################################################
## script
#####################################################################################################
echo
echo "====================================================================================="
echo "====================================================================================="
echo "PR LE MOMENT RIEN N'EST ECRIT SUR VOTRE DISQUE DUR"
echo
echo -e "${RED}${bold}WARNING${normal}${NC}"
echo "ce script fonctionne comme un processus a executer dans son ensemble, cependant, rien n'est modifié"
echo "sur vos disques durs jusqu'a l'etape 27"
echo "si jamais 1 quelconque etape ne passait pas, vs pourriez editer ce script, corriger l'erreur"
echo "et l'executer a nouveau dans son entierete"
echo "1] soyez surs que votre DDI est reconnu en tant que /dev/sda (vs pourrez verifier + tard)"
echo "2] etape 13: variables definies en dur. Le nbre de variable est = au nbre de partitions du DDE"
echo "3] etape 24: variables definies en dur. Le nbre de variable est = au nbre de partitions du DDI"
echo "on affiche 2] et 3] ds le recapitulatif"
echo
echo "PR LE MOMENT RIEN N'EST ECRIT SUR VOTRE DISQUE DUR"
echo "====================================================================================="
echo "====================================================================================="
echo "====================================================================================="
echo
echo "${bold} --- variables communes, utilisées pour les 2 disques --- ${normal}"
echo
echo "====================================================================================="
echo
echo
echo "====================================================================================="
echo
## etape -09: definition de variables necessaires a l'execution de ce script depuis le shell clonezilla
# nom utilisateur: il est utilisé pr
	# - les chemins de creation et suppression des repertoires et fichiers
	# - creation et suppression des points de montage
	# - modifications des fichiers
		# /etc/fstab
		# /boot/grub/grub.cfg
		# /etc/default/grub
		# /EFI/debian/grub.cfg
	# - le chroot
		
## ETAPE 01: designation du prefixe des disques
echo -e "ETAPE 01: ${bold}INFORMATION:${normal}"
echo 'declaration de la variable qui contient le prefixe des disques (/dev/sd)'
dev01="/dev/sd"
dev02="/dev/nvme0n"
echo
echo "====================================================================================="
echo
## ETAPE 02: variable qui definit votre compte utilisateur
echo "ETAPE 02: ENTREE:"
read -p 'entrez votre compte utilisateur: ' utilisateur
echo 'votre compte utilisateur est: '$utilisateur
echo
echo "====================================================================================="
echo
## ETAPE 03: variable qui definit le nom de votre cle USB ou est stocké ce script
echo "ETAPE 03: ENTREE:"
read -p 'entrez le nom de votre cle USB qui contient ce script: ' nom_cle_USB
echo 'le nom de la cle USB qui contient ce script est: '$nom_cle_USB
echo
echo "====================================================================================="
echo
echo "${bold} --- variables et fichiers qui ne servent que pr le DDE --- ${normal}"
echo
echo "====================================================================================="
echo
## ETAPE 04: creation du fichier retour_commande_fdisk.txt qui enregistre le retour de la commande
echo "ETAPE 04: VERIFICATION:"
echo 'verifez que votre DDI est bien reconnu en tant que '$dev02' a grace a fdisk -l'
echo 'creation du fichier retour_commande_fdisk.txt a cote de ce script'
echo 'veuillez consulter le fichier retour_commande_fdisk.txt pr savoir si votre DDI est bien reconnu en tant que '$dev02
echo 'reconnaissez egalement sous quelle lettre est reconnu votre DDE'
fdisk -l > retour_commande_fdisk.txt
echo
echo "====================================================================================="
echo
## ETAPE 05: variable qui definit la lettre designant votre DDE
echo "ETAPE 05: ENTREE:"
read -p 'entrez la lettre qui designe votre DDE (tapez une seule lettre):' lettre_disque_DDE
echo
echo 'Votre DDE est désigné avec la lettre: '$lettre_disque_DDE
echo "====================================================================================="
echo
## ETAPE 06: creer le fichier contientUUIDs.txt pr y enregistrer la sortie de la commande lsblk -o UUID
echo "ETAPE 06: ${bold}INFORMATION:${normal}"
echo 'creation du fichier temporaire contientUUIDs.txt qui va contenir les UUIDs de '$dev01$lettre_disque_DDE' (votre DDE)'
lsblk -o UUID $dev01$lettre_disque_DDE > contientUUIDs.txt
echo
echo "====================================================================================="
echo
## ETAPE 07: efface les 2 premieres L du fichier contientUUIDs.txt
echo "ETAPE 07: ${bold}INFORMATION:${normal}"
echo "fichier lu contientUUIDs.txt: on efface les 2 premieres L de ce fichier qui ne contiennent rien d'utile"
sed -i '1,2d' contientUUIDs.txt
echo
echo "====================================================================================="
echo
echo "PAUSE"
pause
echo
echo "====================================================================================="
echo
## ETAPE 08: compte le nbre de L ds le fichier contientUUIDs.txt, SANS afficher le nom du fichier
nbre_lignes_contientUUIDs_DDE=$(wc -l < contientUUIDs.txt);
echo "ETAPE 08: VERIFICATION:"
echo 'nbre de L ds le fichier contientUUIDs.txt = nbre de partitions sur '$dev01$lettre_disque_DDE
echo 'il y a '$nbre_lignes_contientUUIDs_DDE' lignes inscrites ds le fichier contientUUIDs.txt, vs devez avoir le meme nbre de partitions sur votre' $dev01$lettre_disque_DDE' (DDE) et sur votre '$dev02$lettre_disque_DDI' (DDI), sinon veuillez ne pas executer ce script'
echo
echo "====================================================================================="
echo
## ETAPE 09: creer le fichier contientPARTLABELs.txt pr y enregistrer la sortie de la commande lsblk -o PARTLABEL
echo "ETAPE 09: ${bold}INFORMATION:${normal}"
echo 'creation du fichier temporaire contientPARTLABELs.txt qui va contenir les PARTLABELs de '$dev01$lettre_disque_DDE' (votre DDE)'
lsblk -o PARTLABEL '/dev/sd'$lettre_disque_DDE > contientPARTLABELs.txt
echo
echo "====================================================================================="
echo
## ETAPE 10: efface les 2 premieres L du fichier contientPARTLABELs.txt
echo "ETAPE 10: ${bold}INFORMATION:${normal}"
echo "fichier lu contientPARTLABELs.txt: on efface les 2 premieres L de ce fichier qui ne contiennent rien d'utile"
sed -i '1,2d' contientPARTLABELs.txt
echo
echo "====================================================================================="
echo
## ETAPE 11: compte le nbre de L ds le fichier contientPARTLABELs.txt, SANS afficher le nom du fichier
nbre_lignes_contientPARTLABELs_DDE=$(wc -l < contientPARTLABELs.txt);
echo "ETAPE 11: VERIFICATION:"
echo 'nbre de L ds le fichier contientPARTLABELs.txt = nbre de partitions sur '$dev01$lettre_disque_DDE
echo 'il y a '$nbre_lignes_contientPARTLABELs_DDE' lignes inscrites ds le fichier contientPARTLABELs.txt, vs devez avoir le meme nbre de partitions sur votre '$dev01$lettre_disque_DDE' (DDE) et sur votre '$dev02$lettre_disque_DDI' (DDI), sinon veuillez ne pas executer ce script'
echo
echo "====================================================================================="
echo "TODO"
echo "ecrire condition qui verifie qu'il y a le meme nbre de L entre les 2 fichiers precedents"
echo "contientUUIDs.txt et contientPARTLABELs.txt"
echo "====================================================================================="
echo
## ETAPE 12: afficher les variables assignées dynamiquement concernant le DDE
echo "ETAPE 12: ${bold}INFORMATION:${normal}"
echo "on affiche les partitions de ${dev01}${lettre_disque_DDE} avec leur UUID et leur PARTLABEL"
for i in $(seq 1 $nbre_lignes_contientUUIDs_DDE); do
	UUID_partition_DDE[$i]=$(sed -n "${i}p" contientUUIDs.txt)
	PARTLABEL_partition_DDE[$i]=$(sed -n "${i}p" contientPARTLABELs.txt)
	echo "${dev01}${lettre_disque_DDE}$i --- ${UUID_partition_DDE[$i]} --- ${PARTLABEL_partition_DDE[$i]}"
done
echo
echo "====================================================================================="
echo
## ETAPE 13: definit° de variables pr le DDE qui porteront le nom: uuid_PARTLABEL_disque+lettre+n° de la partition
echo "ETAPE 13: ${bold}INFORMATION:${normal}"
echo 'on definit de nvelles variables avec des noms plus explicites ayant les valeurs de la liste au-dessus'
echo 'on les affiche ds le recapitulatif'
declare uuid_efi_sd$lettre_disque_DDE1=${UUID_partition_DDE[1]}
declare uuid_racine_sd$lettre_disque_DDE2=${UUID_partition_DDE[2]}
declare uuid_home_sd$lettre_disque_DDE3=${UUID_partition_DDE[3]}
declare uuid_swap_sd$lettre_disque_DDE4=${UUID_partition_DDE[4]}
echo
echo "====================================================================================="
echo
## ETAPE 14: efface le fichier contientUUIDs.txt ou st inscrites les UUIDs
echo "ETAPE 14: ${bold}INFORMATION:${normal}"
echo "on efface le fichier temporaire contientUUIDs.txt qui contenait les UUIDs"
echo "vs pvez vérifier manuellement"
rm contientUUIDs.txt
echo
echo "====================================================================================="
echo
echo "PAUSE"
pause
echo
echo "====================================================================================="
echo
## ETAPE 15: efface le fichier contientPARTLABELs.txt ou st inscrites les PARTLABELs
echo "ETAPE 15: ${bold}INFORMATION:${normal}"
echo "on efface le fichier temporaire contientPARTLABELs.txt qui contenait les PARTLABELs"
echo "vs pvez vérifier manuellement"
rm contientPARTLABELs.txt
echo
echo "====================================================================================="
echo
echo "${bold} --- variables et fichiers qui ne servent que pr le DDI --- ${normal}"
echo
echo "====================================================================================="
echo
## ETAPE 16: variable qui definit la lettre designant votre DDI
echo "ETAPE 16: ENTREE:"
read -p 'entrez le chiffre qui designe votre DDI (tapez un seul chiffre):' lettre_disque_DDI
echo
echo 'Votre DDI est désigné avec le chiffre: '$lettre_disque_DDI
echo
echo "====================================================================================="
echo
## ETAPE 17: creer le fichier contientUUIDs.txt pr y enregistrer la sortie de la commande lsblk -o UUID
echo "ETAPE 17: ${bold}INFORMATION:${normal}"
echo 'creation du fichier temporaire contientUUIDs.txt qui va contenir les UUIDs de '$dev02$lettre_disque_DDI' (votre DDI)'
lsblk -o UUID $dev02$lettre_disque_DDI > contientUUIDs.txt
echo
echo "====================================================================================="
echo
## ETAPE 18: efface les 2 premieres L du fichier contientUUIDs.txt
echo "ETAPE 18: ${bold}INFORMATION:${normal}"
echo "fichier lu contientUUIDs.txt: on efface les 2 premieres L de ce fichier qui ne contiennent rien d'utile"
sed -i '1,2d' contientUUIDs.txt
echo
echo "====================================================================================="
echo
echo "PAUSE"
pause
echo
echo "====================================================================================="
echo
## ETAPE 19: compte le nbre de L ds le fichier contientUUIDs.txt, SANS afficher le nom du fichier
nbre_lignes_contientUUIDs_DDI=$(wc -l < contientUUIDs.txt);
echo "ETAPE 19: VERIFICATION:"
echo 'nbre de L ds le fichier contientUUIDs.txt = nbre de partitions sur '$dev02$lettre_disque_DDI
echo 'il y a '$nbre_lignes_contientUUIDs_DDI' lignes inscrites ds le fichier contientUUIDs.txt, vs devez avoir le meme nbre de partitions sur votre '$dev02$lettre_disque_DDI' (DDI) et sur votre '$dev01$lettre_disque_DDE' (DDE), sinon veuillez ne pas executer ce script'
echo
echo "====================================================================================="
echo
## ETAPE 20: creer le fichier contientPARTLABELs.txt pr y enregistrer la sortie de la commande lsblk -o PARTLABEL
echo "ETAPE 20: ${bold}INFORMATION:${normal}"
echo 'creation du fichier temporaire contientPARTLABELs.txt qui va contenir les PARTLABELs de '$dev02$lettre_disque_DDI' (votre DDI)'
lsblk -o PARTLABEL $dev02$lettre_disque_DDI > contientPARTLABELs.txt
echo
echo "====================================================================================="
echo
## ETAPE 21: efface les 2 premieres L du fichier contientPARTLABELs.txt
echo "ETAPE 21: ${bold}INFORMATION:${normal}"
echo "fichier lu contientPARTLABELs.txt: on efface les 2 premieres L de ce fichier qui ne contiennent rien d'utile"
sed -i '1,2d' contientPARTLABELs.txt
echo
echo "====================================================================================="
echo
echo 'PAUSE'
pause
echo
echo "====================================================================================="
echo
## ETAPE 22: compte le nbre de L ds le fichier contientPARTLABELs.txt, SANS afficher le nom du fichier
nbre_lignes_contientPARTLABELs_DDI=$(wc -l < contientPARTLABELs.txt);
echo "ETAPE 22: VERIFICATION:"
echo 'nbre de L ds le fichier contientPARTLABELs.txt = nbre de partitions sur '$dev02$lettre_disque_DDI
echo 'il y a '$nbre_lignes_contientPARTLABELs_DDI' lignes inscrites ds le fichier contientPARTLABELs.txt, vs devez avoir le meme nbre de partitions sur votre '$dev02$lettre_disque_DDI' (DDI) et sur votre '$dev01$lettre_disque_DDE' (DDE), sinon veuillez ne pas executer ce script'
echo
echo "====================================================================================="
echo
echo "TODO"
echo "ecrire condition qui verifie qu'il y a le meme nbre de L entre les 2 fichiers precedents"
echo "contientUUIDs.txt et contientPARTLABELs.txt"
echo
echo "====================================================================================="
echo
## ETAPE 23: afficher les variables assignées dynamiquement concernant le DDI
echo "ETAPE 23: ${bold}INFORMATION:${normal}"
echo "on affiche les partitions de ${dev02}${lettre_disque_DDI} avec leur UUID et leur PARTLABEL"
for i in $(seq 1 $nbre_lignes_contientUUIDs_DDI); do
	UUID_partition_DDI[$i]=$(sed -n "${i}p" contientUUIDs.txt)
	PARTLABEL_partition_DDI[$i]=$(sed -n "${i}p" contientPARTLABELs.txt)
	echo "${dev02}${lettre_disque_DDI}p$i --- ${UUID_partition_DDI[$i]} --- ${PARTLABEL_partition_DDI[$i]}"
done
echo
echo "====================================================================================="
echo
echo "PAUSE"
pause
echo
echo "====================================================================================="
echo
## ETAPE 24: definit° de variables pr le DDI qui porteront le nom: uuid_PARTLABEL_disque+lettre+n° de la partition
echo "ETAPE 24: ${bold}INFORMATION:${normal}"
echo 'on definit de nvelles variables avec des noms plus explicites ayant les valeurs UUID de la liste au-dessus'
echo 'on les affiche ds le recapitulatif'
uuid_efi_sda1=${UUID_partition_DDI[1]}
uuid_racine_sda2=${UUID_partition_DDI[2]}
uuid_home_sda3=${UUID_partition_DDI[3]}
uuid_swap_sda4=${UUID_partition_DDI[4]}
echo
echo "====================================================================================="
echo
## ETAPE 25: efface le fichier contientUUIDs.txt ou st inscrites les UUIDs
echo "ETAPE 25: ${bold}INFORMATION:${normal}"
echo "on efface le fichier temporaire contientUUIDs.txt qui contenait les UUIDs"
echo "vs pvez vérifier manuellement"
rm contientUUIDs.txt
echo
echo "====================================================================================="
echo
echo "PAUSE"
pause
echo
echo "====================================================================================="
echo
## ETAPE 26: efface le fichier contientPARTLABELs.txt ou st inscrites les PARTLABELs
echo "ETAPE 26: ${bold}INFORMATION:${normal}"
echo "on efface le fichier temporaire contientPARTLABELs.txt qui contenait les PARTLABELs"
echo "vs pvez vérifier manuellement"
rm contientPARTLABELs.txt
echo
echo "====================================================================================="
echo
## ETAPE 27: efface le fichier retour_commande_fdisk.txt
echo "ETAPE 27: ${bold}INFORMATION:${normal}"
echo 'on efface le fichier retour_commande_fdisk.txt'
rm retour_commande_fdisk.txt
echo
echo "====================================================================================="
echo "====================================================================================="
echo
echo -e "${GREEN}${bold}RECAPITULATIF:${normal}${NC}"
echo "votre compte utilisateur: ${utilisateur}"
echo "le nom de votre cle USB: ${nom_cle_USB}"
echo "le chiffre qui designe votre DDI: ${lettre_disque_DDI}"
echo "dc votre DDI est designe sous la forme: ${dev02}${lettre_disque_DDI}"
echo "la lettre qui designe votre DDE: ${lettre_disque_DDE}"
echo "dc votre DDE est designe sous la forme: ${dev01}${lettre_disque_DDE}"
echo "====================================================================================="
echo -e "${bold}partitions de votre DDE avec leur UUID                                  --- partitions de votre DDI avec leur UUID${NC}"
echo -e "${bold}nom de variable, valeur                                                 --- nom de variable, valeur${NC}"
echo 'uuid_efi_sd$lettre_disque_DDE1, '$uuid_efi_sd$lettre_disque_DDE1'                               --- uuid_efi_sda1, '$uuid_efi_sda1
echo 'uuid_racine_sd$lettre_disque_DDE2, '$uuid_racine_sd$lettre_disque_DDE2' --- uuid_racine_sda2, '$uuid_racine_sda2
echo 'uuid_home_sd$lettre_disque_DDE3, '$uuid_home_sd$lettre_disque_DDE3'   --- uuid_home_sda3, '$uuid_home_sda3
echo 'uuid_swap_sd$lettre_disque_DDE4, '$uuid_swap_sd$lettre_disque_DDE4'   --- uuid_swap_sda4, '$uuid_swap_sda4
echo
echo "avec ce recapitulatif, vs pvez voir que les partitions st identiques sur les 2 disques"
echo
echo "====================================================================================="
echo "====================================================================================="
echo
if confirm "Jusqu a present rien n'a ete modifié sur vos disques, vlez-vs continuer";
then
	echo "oui? alors on peut continuer ce script"
else
	echo "non?, ok, merci"
	exit 0
fi
echo
echo "====================================================================================="
echo
if confirm "etape X28: vlez vs effectuer la prochaine etape Démonter les partitions de votre DDI? repondre non, skip cette etape ms le script doit continuer son execution";
then
## etape 28: demontage des partitions du DDI
## ameliorations possibles?
if confirm "etape 28: Démonter les partitions de votre DDI (au cas ou elles seraient montees)?";
then
	echo 'on peut demonter les partitions de votre DDI designe en tant que:'${dev02}${lettre_disque_DDI}
	echo 'on demonte '${dev02}${lettre_disque_DDI}p1' label: '${PARTLABEL_partition_DDI[1]}
	umount ${dev02}${lettre_disque_DDI}p1
	echo 'on demonte '${dev02}${lettre_disque_DDI}p2' label: '${PARTLABEL_partition_DDI[2]}
	umount ${dev02}${lettre_disque_DDI}p2
	echo 'on demonte '${dev02}${lettre_disque_DDI}p3' label: '${PARTLABEL_partition_DDI[3]}
	umount ${dev02}${lettre_disque_DDI}p3
	echo 'on demonte '${dev02}${lettre_disque_DDI}p4' label: '${PARTLABEL_partition_DDI[4]}
	umount ${dev02}${lettre_disque_DDI}p4
else
	echo "etape 28: vs sortez du script sans démontage des partitions"
	exit 0
fi
else
echo "l'etape X28, le demontage des partitions n'a pas du etre effectuée ms le script continue"
fi
echo
echo "====================================================================================="
echo

if confirm "etape X29: vlez vs effectuer la prochaine etape modifier les UUIDs des partitions de votre DDI? repondre non, skip cette etape ms le script doit continuer son execution";
then
## etape 29: modification des UUIDs des partitions du DDI
## definition de nvelles variables qui contiennent les nvelles UUIDs de chaque partition du DDI
## afin de modifier les fichiers
## - /etc/fstab
## - /boot/grub/grub.cfg
## - /etc/default/grub
## - /etc/initramfs-tools/conf.d/resume (ds lequel on modifie l'UUID de la swap)
## ameliorations possibles?
if confirm "etape 29: les partitions st demontees, peut on modifier leur UUID?";
then
	echo "nveaux UUIDs pour les partitions de "${dev02}${lettre_disque_DDI}
	echo "definit° de nvelles variables qui contiennent les nvelles UUIDs de chaque partition du DDI"
	
	## partition efi du DDI
	echo -e "${ORANGE}---------- partition: "${dev02}${lettre_disque_DDI}p1" ,label: "${PARTLABEL_partition_DDI[1]}$NC
	echo "ancienne UUID: "$uuid_efi_sda1
	echo "definition de la variable nvelle_UUID_efi_DDI"
	dd bs=1 skip=67 count=4 if=$uuid_efi_sda1 2>/dev/null | xxd -plain -u | sed -r 's/(..)(..)(..)(..)/\4\3-\2\1/'
	nvelle_UUID_efi_DDI="5249-BEAC"
       	printf "\x${nvelle_UUID_efi_DDI:7:2}\x${nvelle_UUID_efi_DDI:5:2}\x${nvelle_UUID_efi_DDI:2:2}\x${nvelle_UUID_efi_DDI:0:2}" \ | dd bs=1 seek=67 count=4 conv=notrunc of=$dev02$lettre_disque_DDI'p1'
       	echo "nvelle UUID de la partition "${dev02}${lettre_disque_DDI}p1" ,label: "${PARTLABEL_partition_DDI[1]}", UUID: "${nvelle_UUID_efi_DDI}
       	echo
	
	## partition racine du DDI
	echo -e "${ORANGE}---------- partition: "${dev02}${lettre_disque_DDI}p2" ,label: "${PARTLABEL_partition_DDI[2]}${NC}
	echo "ancienne UUID: "$uuid_racine_sda2
	echo "definition de la variable nvelle_UUID_racine_DDI"
	e2fsck -f $dev02$lettre_disque_DDI'p2'
	tune2fs -U 9d55602a-1374-4c57-9c09-ddafe8869977 $dev02$lettre_disque_DDI'p2'
	nvelle_UUID_racine_DDI=9d55602a-1374-4c57-9c09-ddafe8869977
	echo "nvelle UUID de la partition "${dev02}${lettre_disque_DDI}p2" ,label: "${PARTLABEL_partition_DDI[2]}", UUID: "${nvelle_UUID_racine_DDI}
	echo
	
	## partition /home du DDI
	echo -e "${ORANGE}---------- partition: "${dev02}${lettre_disque_DDI}p3" ,label: "${PARTLABEL_partition_DDI[3]}${NC}
	echo "ancienne UUID: "$uuid_home_sda3
	echo "definition de la variable nvelle_UUID_home_DDI"
	e2fsck -f $dev02$lettre_disque_DDI'p3'
	tune2fs -U 1fa035fd-470f-47d4-bdee-4403c1a3688e $dev02$lettre_disque_DDI'p3'
	nvelle_UUID_home_DDI=1fa035fd-470f-47d4-bdee-4403c1a3688e
	echo "nvelle UUID de la partition "${dev02}${lettre_disque_DDI}p3" ,label: "${PARTLABEL_partition_DDI[3]}", UUID: "${nvelle_UUID_home_DDI}
	echo
	
	## partition swap du DDI
	echo -e "${ORANGE}---------- partition: "${dev02}${lettre_disque_DDI}p4" ,label: "${PARTLABEL_partition_DDI[4]}${NC}
	echo "ancienne UUID: "$uuid_swap_sda4
	echo "definition de la variable nvelle_UUID_swap_DDI"
	mkswap -U 2434c3ea-b995-4711-858f-c8dc3f6ba4c9 $dev02$lettre_disque_DDI'p4'
	nvelle_UUID_swap_DDI=2434c3ea-b995-4711-858f-c8dc3f6ba4c9
	echo "nvelle UUID de la partition "${dev02}${lettre_disque_DDI}p4" ,label: "${PARTLABEL_partition_DDI[4]}", UUID: "${nvelle_UUID_swap_DDI}
	echo

	echo "execution de gdisk"
	echo "pr modifier manuellement les PARTUUIDs"
	echo "x pr entrer ds le menu expert"
	echo "c pr modifier le PARTUUID d 1 partition"
	echo "choisir la partition (le faire pr ttes les partitions du disque)"
	echo "faire la manip pr ttes les partitions de /dev/nvme0n1"
	echo "R pr effectuer ce changement en Random"
	echo "1x que la manip a été effectuée sur ttes les partitions:"
	echo "w pr ecrire les modifications, confirmez"
	echo "gdisk se fermera et le script reprendra son execution"
	gdisk /dev/nvme0n1
else
	echo "etape 29: vs sortez du script sans definir au moins 1 des nveaux UUIDs"
	exit 0
fi
else
echo "l'etape X29, renommer les UUIDS des partitions du DDI  n'a pas du etre effectuée ms le script continue"
fi


echo "====================================================================================="
echo "etape X29A, creer 1 fichier pr contenir les PTUUIDs des partitions de /dev/nvme0n1"
echo "efi (/dev/nvme0n1p1) = UUID"
echo "les autres partitions st en PTUUID"
if confirm "vlez-vs creer 1 fichier temporaire pr stocker les PTUUIDs des partitions de /dev/nvme0n1?"
then
# creer le fichier pr contenir les infos
lsblk -o UUID /dev/nvme0n1 > test.txt
# efface les 2 premieres L du fichier qui ne servent a rien
sed -i '1,2d' test.txt
varnbrepartitions=$(wc -l < test.txt);
echo 'le fichier comporte '$varnbrepartitions'L ,il y a normalement le meme nbre de partitions'
# attribution et affichage des variables dynamiques qui contiennent les PTUUIDs des partitions de /dev/nvme0n1
for i in $(seq 1 $varnbrepartitions); do
	UUID_partition_DDI[$i]=$(sed -n "${i}p" test.txt)
	echo "${UUID_partition_DDI[$i]}"
done
echo "-------------------------"

uuid_efi_nvme0n1p1=${UUID_partition_DDI[1]}
uuid_racine_nvme0n1p2=${UUID_partition_DDI[2]}
uuid_home_nvme0n1p3=${UUID_partition_DDI[3]}
uuid_swap_nvme0n1p4=${UUID_partition_DDI[4]}

echo "${uuid_efi_nvme0n1p1}"
echo "${uuid_racine_nvme0n1p2}"
echo "${uuid_home_nvme0n1p3}"
echo "${uuid_swap_nvme0n1p4}"

echo effacer le fichier temporaire
rm /media/sambano/sauv_donnees/test.txt

echo "--------------------------"

else
echo "probleme etape X29A"
fi

echo
echo "====================================================================================="
echo

if confirm "etape X31: vlez vs effectuer la prochaine etape Monter la partition racine de votre DDI? repondre non, skip cette etape ms le script doit continuer son execution";
then
## etape 31: monter la partition racine du DDI pr modifier le fichier suivant:
## - /boot/grub/grub.cfg
## racine sera montee sur /media/sambano/SonUUID
## ameliorations possibles?
if confirm "etape 31: ns avons besoin de monter la partition "${dev02}${lettre_disque_DDI}p2" (racine) de votre DDI pr modifier le fichier /boot/grub.grub.cfg, vlez-vs la monter?";
then
	echo "creation du point de montage"
	mkdir /media/${utilisateur}/${uuid_racine_nvme0n1p2}
	echo "on monte la partition /dev/nvme0n1p2 (racine) (de votre DDI) sur /media/"${utilisateur}"/"${uuid_racine_nvme0n1p2}
	mount /dev/nvme0n1p2 /media/${utilisateur}/${uuid_racine_nvme0n1p2}
else
	echo "etape 31: vs sortez du script sans monter la partition /dev/nvme0n1p2 (racine) de votre DDI"
	exit 0
fi
else
echo "l'etape 31, monter la partition racine du DDI n'a pas du etre effectuée ms le script continue"
fi
echo
echo "====================================================================================="
echo

if confirm "etape X32: vlez vs effectuer la prochaine etape, modifier le fichier: /boot/grub/grub.cfg du DDI? repondre non, skip cette etape ms le script doit continuer son execution";
then
## etapes 32: modifier le fichier: /boot/grub/grub.cfg du DDI
if confirm "etape 32: modifier /media/"${utilisateur}"/"${uuid_racine_nvme0n1p2}"/boot/grub/grub.cfg du DDE et remplacer les occurences de l'ancienne UUID de la partition racine par des occurences de la nvelle UUID?";
then
	echo "modification du fichier /media/"${utilisateur}"/"${uuid_racine_nvme0n1p2}"/boot/grub/grub.cfg du DDI"
	echo "ttes les occurences de l'ancienne UUID de la partition racine: "${uuid_racine_sda2}
	echo "par des ocurrences de la nvelle UUID de la partition racine: "${uuid_racine_nvme0n1p2}
	sed -i "s/${uuid_racine_sda2}/${uuid_racine_nvme0n1p2}/g" /media/$utilisateur/$uuid_racine_nvme0n1p2/boot/grub/grub.cfg
	echo "Vous pvez verifier en editant le fichier"
else
	echo "etape 32: vs sortez du script sans modifier /media/"${utilisateur}"/"${nvelle_UUID_racine_DDI}"/grub/grub.cfg et remplacer les occurences de l'ancienne UUID de la partition racine par des occurences de la nvelle UUID"
	exit 0
fi
else
echo "l'etape X32, modifier le fichier /boot/grub/grub.cfg du DDI n'a pas du etre effectuée ms le script continue"
fi
echo
echo "====================================================================================="
echo

if confirm "etape X37: vlez vs effectuer la prochaine etape, modifier le fichier: /etc/fstab du DDI? repondre non, skip cette etape ms le script doit continuer son execution";
then
## etapes 37: modifier le fichier /etc/fstab du DDI
if confirm "etape 37: modifier /media/"${utilisateur}"/"${uuid_racine_nvme0n1p2}"/etc/fstab (de votre DDI) en y inscrivant les nvelles UUIDs des partitions du DDI?";
then
	echo "etape 37: mofification du fichier /media/"${utilisateur}"/"${uuid_racine_nvme0n1p2}"/etc/fstab du DDI"
	
	echo "etape 37-1: ancienne UUID de la racine: "${uuid_racine_sda2}
	echo "par nvelle UUID de la racine: "${uuid_racine_nvme0n1p2}
	sed -i "s/${uuid_racine_sda2}/${uuid_racine_nvme0n1p2}/g" /media/$utilisateur/$uuid_racine_nvme0n1p2/etc/fstab
	
	echo "etape 37-2: ancienne UUID de efi: "${uuid_efi_sda1}
	echo "par nvelle UUID de efi: "${uuid_efi_nvme0n1p1}
	sed -i "s/${uuid_efi_sda1}/${uuid_efi_nvme0n1p1}/g" /media/$utilisateur/$uuid_racine_nvme0n1p2/etc/fstab
	
	echo "etape 37-3: ancienne UUID de home: "${uuid_home_sda3}
	echo "par nvelle UUID de home: "${uuid_home_nvme0n1p3}
	sed -i "s/${uuid_home_sda3}/${uuid_home_nvme0n1p3}/g" /media/$utilisateur/$nvelle_UUID_racine_DDI/etc/fstab
	
	echo "etape 37-4: ancienne UUID de swap: "${uuid_swap_sda4}
	echo "par nvelle UUID de swap: "${uuid_swap_nvme0n1p5}
	sed -i "s/${uuid_swap_sda4}/${uuid_swap_nvme0n1p4}/g" /media/$utilisateur/$nvelle_UUID_racine_DDI/etc/fstab
	
	echo "Vous pvez verifier en editant le fichier"
else
	echo "etape 37: vs sortez du script sans modifier /media/"${utilisateur}"/"${uuid_racine_nvme0n1p2}"/etc/fstab et y inscrire 1 (ou +) nvelle(s) UUID(s) de partition du DDI"
	exit 0
fi
else
echo "l'etape X37, modifier le fichier /etc/fstab du DDI n'a pas du etre effectuée ms le script continue"
fi
echo
echo "====================================================================================="
echo

if confirm "etape X38: vlez vs effectuer la prochaine etape, modifier (eventuellement) le fichier: /etc/default/grub du DDI? repondre non, skip cette etape ms le script doit continuer son execution";
then
## etape 38: modifier (eventuellement) le fichier /etc/default/grub du disque cible (DDI)
## condition grep qui recherche au - 1 occurence du pattern ds le fichier /etc/default/grub du disque cible, votre DDI
## on modifie ou pas selon nos souhaits
if confirm "etape 38: modifier /media/"${utilisateur}"/"${uuid_racine_nvme0n1p2}"/etc/default/grub (de votre DDI) en y ajoutant (ou supprimant) eventuellement 1 L?";
then
	echo -e "${RED}${bold}ns sommes ds le script de restauration, le disque source est toujours DDE, le disque cible est tjs DDI, c'est une operation de restauration${normal}${NC}"
	echo -e "${RED}${bold}ns devons dc ajouter la L: GRUB_DISABLE_OS_PROBER=true au fichier DDI/etc/default/grub du disque cible, SI ELLE N EXISTE PAS${normal}${NC}"
	if grep -q "GRUB_DISABLE_OS_PROBER=true" /media/${utilisateur}/${uuid_racine_nvme0n1p2}/etc/default/grub
	then
		if confirm "occurence GRUB_DISABLE_OS_PROBER=true trouvee ds le fichier situé sur le disque cible DDI/etc/default/grub, vlez vs l'effacer?";
		then
			echo "on efface la L GRUB_DISABLE_OS_PROBER=true du fichier situé sur le disque cible DDI/etc/default/grub"
			sed -i '/GRUB_DISABLE_OS_PROBER=true/d' /media/$utilisateur/$uuid_racine_nvme0n1p2/etc/default/grub
		else
			echo "on ne modifie pas le fichier situé sur le disque cible DDI/etc/default/grub"
		fi
	else
		if confirm "occurence GRUB_DISABLE_OS_PROBER=true introuvable ds le fichier situé sur le disque cible DDI/etc/default/grub, vlez vs l'ajouter?";
		then
			echo "oui on ajoute la L GRUB_DISABLE_OS_PROBER=true du fichier situé sur le disque cible DDI/etc/default/grub"
			sed -i '$a\GRUB_DISABLE_OS_PROBER=true' /media/$utilisateur/$uuid_racine_nvme0n1p2/etc/default/grub
		else
			echo "on ne modifie pas le fichier situé sur le disque cible DDI/etc/default/grub"
		fi
	fi
else
	echo "etape 38: on sort du script"
	exit 0
fi
else
echo "l'etape X38, modifier le fichier /etc/default/grub n'a pas du etre effectuée ms le script continue"
fi

echo
echo "====================================================================================="
echo

if confirm "etape X39: vlez vs effectuer la prochaine etape, modifier le fichier: /etc/initramfs-tools/conf.d/resume du DDI? repondre non, skip cette etape ms le script doit continuer son execution";
then
## etape 39: modifier le fichier /etc/initramfs-tools/conf.d/resume du DDI
if confirm "etape 39: modifier /media/"${utilisateur}"/"${uuid_racine_nvme0n1p2}"/etc/initramfs-tools/conf.d/resume du DDI et remplacer l'UUID de la partition swap "$uuid_swap_sd$lettre_disque_DDE"4 du DDE par celle de la partition swap "${uuid_swap_nvme0n1p4}" du DDI?"
then
	echo "modification de /media/"${utilisateur}"/"${uuid_racine_nvme0n1p2}"/etc/initramfs-tools/conf.d/resume du DDI"
	echo "UUID inscrite: partition swap "$uuid_swap_sd$lettre_disque_DDE"4 du DDE remplacee par:"
	echo "UUID de la partition swap "${uuid_swap_nvme0n1p4}" du DDI"
	sed -i "s/[[:alnum:]]\{8\}-[[:alnum:]]\{4\}-[[:alnum:]]\{4\}-[[:alnum:]]\{4\}-[[:alnum:]]\{12\}/${nvelle_UUID_swap_DDI}/g" /media/${utilisateur}/${uuid_racine_nvme0n1p2}/etc/initramfs-tools/conf.d/resume
	echo "+ tard, ns executerons la commande suivante: update-initramfs -c -k all, lorsque ns serons ds le chroot"
else
	echo "etape 39: vs sortez du script sans reecrire UUID de swap de /media/"${utilisateur}"/"${uuid_racine_nvme0n1p2}"/etc/initramfs-tools/conf.d/resume du DDI"
	exit 0
fi
else
echo "l'etape X39, modifier le fichier /etc/initramfs-tools/conf.d/resume du DDI n'a pas du etre effectuée ms le script continue"
fi

echo
echo "====================================================================================="
echo

if confirm "etape X40: vlez vs effectuer la prochaine etape, démonter la partition racine du DDI? repondre non, skip cette etape ms le script doit continuer son execution";
then
## etape 40: demonter la partition racine du DDI et supprimer le repertoire
if confirm "etape 40: demonter la partition racine du DDI et supprimer le repertoire de montage?";
then
	umount /dev/nvme0n1p2
	rmdir /media/${utilisateur}/${uuid_racine_nvme0n1p2}
else
	echo "etape 40: vs sortez du script sans demonter la partition racine du DDI et/ou supprimer le repertoire de montage"
	exit 0
fi
else
echo "l'etape X40, le demontage de la partition racine du DDI n'a pas du etre effectuée ms le script continue"
fi
echo
echo "====================================================================================="
echo

if confirm "etape X41: vlez vs effectuer la prochaine etape, monter la partition racine  du DDE? repondre non, skip cette etape ms le script doit continuer son execution";
then
## etapes 41: monter la partition racine du DDE pr y modifier eventuellement le fichier /etc/default/grub
if confirm "etape 41: ns avons besoin de monter la partition "${dev01}${lettre_disque_DDE}2" (racine) de votre DDE pr eventuellement modifier le fichier /etc/default/grub, vlez-vs la monter?";
then
	echo "creation du point de montage"
	mkdir /media/${utilisateur}/$uuid_racine_sd$lettre_disque_DDE2
	echo "on monte la partition "${dev01}${lettre_disque_DDE}2" (racine) (de votre DDE) sur /media/"${utilisateur}"/"$uuid_racine_sd$lettre_disque_DDE2
	mount ${dev01}${lettre_disque_DDE}2 /media/${utilisateur}/$uuid_racine_sd$lettre_disque_DDE2
else
	echo "etape 41: vs sortez du script sans monter la partition "${dev01}${lettre_disque_DDE}2" (racine) de votre DDE"
fi
else
echo "l'etape X41, monter la partition racine du DDE n'a pas du etre effectuée ms le script continue"
fi
echo
echo "====================================================================================="
echo

if confirm "etape X42: vlez vs effectuer la prochaine etape, modifier (eventuellement) le fichier: /etc/default/grub du DDE? repondre non, skip cette etape ms le script doit continuer son execution";
then
## etape 42: modifier (eventuellement) le fichier /etc/default/grub du disque source (DDE)
## condition grep qui recherche au - 1 occurence du pattern ds le fichier /etc/default/grub du disque source, votre DDE
## on modifie ou pas selon nos souhaits
if confirm "etape 42: modifier /media/"${utilisateur}"/"$uuid_racine_sd$lettre_disque_DDE2"/etc/default/grub (de votre DDE) en y supprimant (ou ajoutant) eventuellement 1 L?";
then
	echo -e "${RED}${bold}ns sommes ds le script de restauration, le disque source est toujours DDE, le disque cible est tjs DDI, c'est une operation de restauration${normal}${NC}"
	echo -e "${RED}${bold}ns devons dc effacer la L: GRUB_DISABLE_OS_PROBER=true du fichier DDE/etc/default/grub du disque source, SI ELLE EXISTE${normal}${NC}"
	if grep -q "GRUB_DISABLE_OS_PROBER=true" /media/$utilisateur/$uuid_racine_sd$lettre_disque_DDE2/etc/default/grub
	then
		if confirm "etape 42: occurence GRUB_DISABLE_OS_PROBER=true trouvee ds le fichier situé sur le disque source DDE/etc/default/grub, vlez vs l'effacer?";
		then
			echo "on efface la L GRUB_DISABLE_OS_PROBER=true du fichier situé sur le disque source DDE/etc/default/grub"
			sed -i '/GRUB_DISABLE_OS_PROBER=true/d' /media/$utilisateur/$uuid_racine_sd$lettre_disque_DDE2/etc/default/grub
		else
			echo "on ne modifie pas le fichier situé sur le disque source DDE/etc/default/grub"
		fi
	else
		if confirm "etape 42: occurence GRUB_DISABLE_OS_PROBER=true introuvable ds le fichier situé sur le disque source DDE/etc/default/grub, vlez vs l'ajouter?";
		then
			echo "oui on ajoute la L GRUB_DISABLE_OS_PROBER=true du fichier situé sur le disque source DDE/etc/default/grub"
			sed -i '$a\GRUB_DISABLE_OS_PROBER=true' /media/$utilisateur/$uuid_racine_sd$lettre_disque_DDE2/etc/default/grub
		else
			echo "on ne modifie pas le fichier situé sur le disque source DDE/etc/default/grub"
		fi
	fi
else
	echo "etape 42: vs sortez du script"
	exit 0
fi
else
echo "l'etape X42, modifier (eventuellement) le fichier /etc/default/grub du DDE n'a pas du etre effectuée ms le script continue"
fi
echo
echo "====================================================================================="
echo

if confirm "etape X44: vlez vs effectuer la prochaine etape, monter la partition efi du DDI? repondre non, skip cette etape ms le script doit continuer son execution";
then
## etape 44: monter la partition efi du DDI pr modifier le fichier suivant:
## /media/laurent/racineDDI/efi/EFI/debian/grub.cfg
if confirm "etape 44: ns avons besoin de monter la partition "${dev02}${lettre_disque_DDI}p1" (efi) de votre DDI pr modifier le fichier /EFI/debian/grub.cfg, vlez-vs la monter?";
then
	echo "creation du point de montage"
	mkdir /media/${utilisateur}/${uuid_efi_nvme0n1p1}
	echo "on monte la partition "${dev02}${lettre_disque_DDI}p1" (efi) (de votre DDI) sur /media/"${utilisateur}"/"${nvelle_UUID_efi_DDI}
	mount ${dev02}${lettre_disque_DDI}p1 /media/${utilisateur}/${uuid_efi_nvme0n1p1}
else
	echo "etape 44: vs sortez du script sans monter la partition "${dev02}${lettre_disque_DDI}p1" (efi) de votre DDI"
	exit 0
fi
else
echo "l'etape X44, monter la partition efi du DDI n'a pas du etre effectuée ms le script continue"
fi
echo
echo "====================================================================================="
echo

if confirm "etape X45: vlez vs effectuer la prochaine etape, modifier le fichier: /EFI/debian/grub.cfg du DDI? repondre non, skip cette etape ms le script doit continuer son execution";
then
## etape 45 modifier le fichier /boot/efi/EFI/debian/grub.cfg du DDI
if confirm "etape 45: modifier /media/"${utilisateur}"/"${uuid_efi_nvme0n1p1}"/EFI/debian/grub.cfg (de votre DDI) en y inscrivant la nvelle UUID de la partition racine du DDI?";
then
	echo "mofification du fichier /media/"${utilisateur}"/"${uuid_efi_nvme0n1p1}"/EFI/debian/grub.cfg du DDI"
	echo "UUID inscrite: celle de la partition racine du DDE: "$uuid_racine_sd$lettre_disque_DDE2
	echo "par nvelle UUID de la partition racine du DDI: ${uuid_racine_nvme0n1p2}"
	sed -i "s/"$uuid_racine_sd$lettre_disque_DDE2"/${uuid_racine_nvme0n1p2}/g" /media/$utilisateur/$uuid_efi_nvme0n1p1/EFI/debian/grub.cfg
else
	echo "etape 45: vs sortez du script sans modifier /media/"${utilisateur}"/"${uuid_efi_nvme0n1p1}"/EFI/debian/grub.cfg (de votre DDI) et y inscrire la nvelle UUID de la partition racine du DDI"
	exit 0
fi
else
echo "l'etape X45, modifier le fichier /boot/efi/EFI/debian/grub.cfg du DDI n'a pas du etre effectuée ms le script continue"
fi
echo
echo "====================================================================================="
echo

if confirm "etape X46: vlez vs effectuer la prochaine etape, démonter la partition efi du DDI? repondre non, skip cette etape ms le script doit continuer son execution";
then
## etape 46: on demonte la partition efi du DDI et on supprime le repertoire de montage
if confirm "etape 46: demonter la partition efi du DDI et supprimer son point (repertoire) de montage?";
then
	umount /dev/nvme0n1p1
	rmdir /media/${utilisateur}/${uuid_efi_nvme0n1p1}
else
	echo "etape 46: vs sortez du script sans demonter la partition EFI "${dev02}${lettre_disque_DDI}p1" du DDI et/ou supprimer le repertoire de montage"
	exit 0
fi
else
echo "l'etape X46, le demontage de la partition efi du DDI n'a pas du etre effectuée ms le script continue"
fi
echo
echo "====================================================================================="
echo

if confirm "etape X47: vlez vs effectuer la prochaine etape, modifier le disk GUID du DDI? repondre non, skip cette etape ms le script doit continuer son execution";
then
## etape 47: on definit un nveau disk GUID pr DDI
if confirm "etape 47: Vlez-vs definir un nvo disk GUID pr votre DDI ${dev02}${lettre_disque_DDI} ?";
then
	echo "definition d'un nvo disk GUID pr votre DDI ${dev02}${lettre_disque_DDI}"
	sgdisk -U 5CF82ADB-5FE7-D49E-5ABE-F73ADE418BA7 $dev02$lettre_disque_DDI
else
	echo "etape 47: vs sortez du script sans definir un nvo disk GUID pr votre DDI ${dev02}${lettre_disque_DDI}"
	exit 0
fi
else
echo "l'etape X47, attribuer nvo disk GUID pr le DDI n'a pas du etre effectuée ms le script continue"
fi
echo
echo "====================================================================================="
echo
## etape 48: lancer les commandes
## update-grub et
## update-initramfs -c -k all
## depuis le systeme source (DDE)
## ameliorations possibles?
if confirm "etape 48: les 4 fichiers cles du DDI ont ete modifiés, vlez vs updater grub et initramfs depuis le systeme source (DDE)?";
then
	echo 'preparation du chroot'
	
## ========================================================================================================================

	echo 'creation de /media/system'
	mkdir -p /media/system
	
	echo 'monter /dev/sda2 (la racine) sur /media/system'
	mount /dev/sda2 /media/system
	
	echo 'monter /dev sur /media/system/dev'
	mount --bind /dev /media/system/dev
	
	echo 'monter /proc sur /media/system/proc'
	mount -t proc /proc /media/system/proc
	
	echo 'monter /run sur /media/system/run (necessaire pr executer la commande update-grub)'
	mount --bind /run /media/system/run
	
	echo 'monter /sys sur /media/system/sys'
	mount -t sysfs /sys /media/system/sys

## ========================================================================================================================

	echo -e "${RED}${bold}AVERTISSEMENT: A LIRE${normal}${NC}"
	echo 'vs etes pret: ce script vient de chrooter le systeme, votre invite de commande a ete modifiee'
	echo 'puisque vs avez lance ce script depuis votre cle USB, le chemin qui etait indique ds votre invite de commande etait /media/VotreNomUtilisateur/LeNomDeVotreCle'
	echo 'maintenant votre invite de commande doit vs indiquer que vs etes tjs root mais vs etes devez etre situé a la racine de votre systeme chroote'
	echo "tapez la commande suivante pr updater l'initramfs: update-initramfs -c -k all"
	echo 'tapez la commande suivante pr updater le grub du DDE: update-grub /dev/sda (en supposant que votre DDE etait designe par la lettre a, sinon remplacez la)'
	echo 'puis sortez du systeme chroote en tapant la commande: exit'
	echo 'le script terminera son execution'
	
	chroot /media/system
	
## ========================================================================================================================

	echo 'on demonte dev, proc, sys, run et system du DDE'

	umount /media/system/dev
	umount /media/system/proc
	umount /media/system/sys
	umount /media/system/run
	umount /media/system
	
	echo 'on efface le repertoire /media/system'
	rmdir /media/system

	echo -e "${RED}${bold}il faut aussi demonter la racine qui se trouve ds /media/sambano${normal}${NC}"
	echo  -e "${RED}${bold}il faut effacer son rep, point de montage. puis demonter la cle USB${normal}${NC}"

	echo "normalement vs etes ok"
	echo "fermez ttes les consoles et comptes que vs avez pu ouvrir"
	echo "pr etre sur que les modifs aient ete prises en compte"
	echo "une x redemarre, Verifiez que tout SEMBLE normal."
	echo "En vous remerciant"
else
	echo "etape 48: vs sortez du script pendant la preparation du chroot ou de l'operation d'updatage de grub ou de celle de l'initramfs depuis DDI"
	exit 0
fi
echo
echo "====================================================================================="
